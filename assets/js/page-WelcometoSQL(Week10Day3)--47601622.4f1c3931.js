(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{473:function(t,e,a){"use strict";a.r(e);var s=a(2),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"welcome-to-sql-week-10-day-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#welcome-to-sql-week-10-day-3"}},[t._v("#")]),t._v(" Welcome to SQL (Week 10 Day 3)")]),t._v(" "),a("h2",{attrs:{id:"in-a-sql-table-what-is-the-difference-between-information-in-a-row-and-information-in-a-column"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#in-a-sql-table-what-is-the-difference-between-information-in-a-row-and-information-in-a-column"}},[t._v("#")]),t._v(" In a SQL table, what is the difference between information in a row and information in a column?")]),t._v(" "),a("p",[t._v('Information in a column are the "values" whereas a row contains the "classes" or "objects" that those values might be assigned to. For example, a "Player" object might have values like "Name, Health, Weapons" and SQL would store that information as a "Players" row, with "Name", "Health" and "Weapons" each as columns of those rows.')]),t._v(" "),a("h2",{attrs:{id:"demonstrate-the-basic-structure-for-creating-a-new-table-called-characters-with-the-values-name-age-description-as-strings-and-an-int-id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#demonstrate-the-basic-structure-for-creating-a-new-table-called-characters-with-the-values-name-age-description-as-strings-and-an-int-id"}},[t._v("#")]),t._v(" Demonstrate the basic structure for creating a new table called characters with the values name, age, description as strings, and an int id.")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" characters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  age "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  description "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h2",{attrs:{id:"what-is-the-difference-between-the-following-statements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-difference-between-the-following-statements"}},[t._v("#")]),t._v(" What is the difference between the following statements:")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" table_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--ANSWER: This will delete all the data from the specified table without destroying the table itself. So the structure remains intact but is empty.")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" table_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--ANSWER: This will delete the entire specified table, including the table structure itself. You will not be able to reference that table or its columns anymore.")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"project-link"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#project-link"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://github.com/CyberTomB/csharp-kingdom",target:"_blank",rel:"noopener noreferrer"}},[t._v("Project Link"),a("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);