(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{490:function(e,t,a){"use strict";a.r(t);var n=a(2),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"functions-objects-loops-w2-d2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#functions-objects-loops-w2-d2"}},[e._v("#")]),e._v(" Functions, Objects & Loops (W2-D2)")]),e._v(" "),a("h2",{attrs:{id:"what-are-the-three-ways-to-syntactically-write-a-function-what-are-the-differences-in-how-the-function-acts-if-any"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-are-the-three-ways-to-syntactically-write-a-function-what-are-the-differences-in-how-the-function-acts-if-any"}},[e._v("#")]),e._v(" What are the three ways to syntactically write a function? What are the differences in how the function acts (if any)?")]),e._v(" "),a("p",[e._v("You can write them the following ways:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("function fnName(params){\n}\n\nlet name = function(params){}\n\nlet name = (params) => {}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("The important thing to know is that in the third case, the function object is nameless and can't be referenced directly elsewhere in your code.")]),e._v(" "),a("h2",{attrs:{id:"what-is-the-difference-between-parameters-and-arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-difference-between-parameters-and-arguments"}},[e._v("#")]),e._v(" What is the difference between Parameters and Arguments?")]),e._v(" "),a("p",[e._v("Parameters are placeholders that expect to receive data. Arguments are the data being passed into those parameters.")]),e._v(" "),a("h2",{attrs:{id:"what-are-higher-order-functions-can-you-provide-an-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-are-higher-order-functions-can-you-provide-an-example"}},[e._v("#")]),e._v(" What are higher order functions? Can you provide an example?")]),e._v(" "),a("p",[e._v("A higher order function is a function that takes a function as an argument or returns a function. A good example might be the .find() method, which requires a callback function to perform an operation over an array.")]),e._v(" "),a("h3",{attrs:{id:"daily-project"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#daily-project"}},[e._v("#")]),e._v(" Daily Project:")]),e._v(" "),a("p",[e._v("https://github.com/CyberTomB/more-js-challenges")])])}),[],!1,null,null,null);t.default=r.exports}}]);